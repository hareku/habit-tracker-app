//go:generate go run .

package main

import (
	"fmt"
	"log"
	"os"

	ifacemaker "github.com/vburenin/ifacemaker/maker"
)

func main() {
	if err := run(); err != nil {
		log.Fatal(err)
	}
}

func run() error {
	result, err := ifacemaker.Make(ifacemaker.MakeOptions{
		Files:        []string{"../../../repository/dynamo_repository.go"},
		StructType:   "DynamoRepository",
		IfaceName:    "DynamoRepositoryIface",
		PkgName:      "api",
		Comment:      "Code generated by gen_dependency; DO NOT EDIT.",
		ImportModule: "github.com/hareku/habit-tracker-app/internal/repository",
	})
	if err != nil {
		return fmt.Errorf("ifacemaker: %w", err)
	}

	f, err := os.Create("../../dependency.go")
	if err != nil {
		return fmt.Errorf("create file: %w", err)
	}
	defer f.Close()

	if _, err := f.Write(result); err != nil {
		return fmt.Errorf("write file: %w", err)
	}
	return nil
}
